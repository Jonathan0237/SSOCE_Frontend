package com.example.frontend.Controller;

import javafx.collections.FXCollections;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.ButtonType;
import javafx.scene.control.CheckBox;
import javafx.scene.control.ComboBox;
import javafx.stage.Stage;

import java.io.IOException;
import java.util.Objects;
import java.util.Optional;

public class SettingsController {

    @FXML
    private CheckBox notificationsCheckBox;
    @FXML
    private CheckBox senddataGriserCheckBox;

    @FXML
    private ComboBox<String> languageComboBox;

    @FXML
    public void initialize() {
        languageComboBox.setItems(FXCollections.observableArrayList(
                "üá´üá∑ Fran√ßais",
                "üá¨üáß Anglais",
                "üá©üá™ Allemand",
                "üáÆüáπ Italien",
                "üá™üá∏ Espagnol"
        ));
        languageComboBox.setValue("üá´üá∑ Fran√ßais"); // Valeur par d√©faut
    }

    @FXML
    private void handleSaveSettings() {
        // Message r√©capitulatif des param√®tres
        String message = "Param√®tres sauvegard√©s :\n" +
                "Notifications : " + (notificationsCheckBox.isSelected() ? "Activ√©es" : "D√©sactiv√©es") + "\n" +
                "D√©sactivation Send Data : " + (senddataGriserCheckBox.isSelected() ? "Activ√©e" : "D√©sactiv√©e") + "\n" +
                "Langue : " + languageComboBox.getValue();

        showAlert("Param√®tres", message);
    }

    @FXML
    private void handleDeleteAccount() {
        // Demander une confirmation avant de supprimer le compte
        Optional<ButtonType> result = showConfirmationDialog("Supprimer mon compte", "√ätes-vous s√ªr de vouloir supprimer votre compte ? Cette action est irr√©versible.");
        if (result.isPresent() && result.get() == ButtonType.OK) {
            // Logique de suppression du compte
            System.out.println("Le compte utilisateur a √©t√© supprim√©."); // Remplacer par votre logique r√©elle
            showAlert("Compte supprim√©", "Votre compte a √©t√© supprim√© avec succ√®s.");
        }
    }

    @FXML
    private void handleResetSettings(ActionEvent event) {
        // R√©initialiser tous les param√®tres aux valeurs par d√©faut
        notificationsCheckBox.setSelected(false);
        senddataGriserCheckBox.setSelected(false);
        languageComboBox.setValue("Fran√ßais");

        showAlert("Param√®tres r√©initialis√©s", "Les param√®tres ont √©t√© r√©initialis√©s aux valeurs par d√©faut.");
    }

    private void showAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

    @FXML
    public void handleTestNotifications(ActionEvent event) {
        // Exemple de logique pour le test
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle("Notification");
        alert.setHeaderText(null);
        alert.setContentText("Ceci est une notification de test !");
        alert.showAndWait();
    }

    private Optional<ButtonType> showConfirmationDialog(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        return alert.showAndWait();
    }
}
